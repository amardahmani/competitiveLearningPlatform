Code Signals:

Pour Developpeur:

c'est une plateforme d'apprentissage des méthodes de programmation logiciel,
elle contient des problemes algorithmiques,preparation pour interview,problemes
de front-end et de base de donnees.

la compte developpeur se divise en plusieurs sections:

1-la section Arcade:

elle contient plusieurs niveaux et dans chaqu'un il y a des quetes pour passer
d'une quetes à une autre il faut valider les problemes de la quete précédente,
cette approche est dans le cas normal sinon l'utilisateur peut utiliser son
compte d'argent (l'argent non reel) pour debloquer des solutions a un certain 
probleme.

2-Pratique pour entretiens:

cette section contient des problemes en structure de donnees et algorithmmes
pour reussir la phase du codage dans son entretien.

les problemes sont classes par concept et niveau de difficultee, et pour la
resolution de problemes elle ne se differe pas de la section precedente.

3-Challenges:

ce sont des problemes cree par la communauté dans plusieurs sections comme:
le front-end, Dev-ops, Base de donnees et algorithmique. Si on est coince dans 
ce type de probleme on peut consulter les solutions que d'autre utilisateurs ont
soummit apres la fin du challenge, donc durant le challenge on peut pas voir les
solutions.

4-Challenges d'entreprises:

elle a une liste d'entreprises avec des problemes d'entretien qui sont deja fait,
le developpeur peut choisir une entreprise et essayer de resoudre ses problemes
mais dans ce cas il y a une contrainte de temps et celui-ci ne peux pas acceder
à les solutions des problemes.

5-Mon Profile:

5.1- aperçu: 
ça permet au developpeur de remplir ses informations personnel, les languages
de programmations qu'il utilise et les outils, et afficher son niveau.Aussi cette inerface a un calendrier
qui suit le developpeur, une carte de statistiques et une carte qui contient
les dernieres solutions soumise par le developpeur avec leurs languages et solutions.

5.2- Badges:
celle-ci contient des badges par rapport au progrees de la personne, par exemple s'il a resoulou une 
cinquantaine de problemes on lui attribut ce badge la. et Si le badge est gagnee il devient colore
sinon il reste gris ce qui signifie que celui-la n'est pas encore gagnee.

5.3- codeFriends: affichage de la liste des amis.

5.4- Questions: affiche les questions vues et valider.


Funtionalitees du Systeme:

Developpeur:
-consulter probleme/solutions/badges/profil/Questions
-S'inscrire/S'authentifier.
-soumettre solutions.
-creer un probleme.
-modifier son profil.

Entreprise:
-tech screen.
-consulter les competences d'un developpeur.


Besoins non-fonctionnels:
-Systeme d'authentification
-devise de la platerforme.
-incrementation de niveau.
-debloquage de badges.
-calendrier.
-chronometre.
-model de prediction de la productivite du developpeur.
-editeur de code avec plusieurs languages de programmation.
-compilateur.
-attribution de points pour chaque probleme resoulu.	


context: reasons

problematic: what's the problem that will be solved by our system.



Questions d'entretiens:

-comment les problèmes sont crées.
-ou sera la compétition hébergée.
-quelles sont les type de compétitions que vous faites?
-comment on évalue les tests de compétition algorithmique ?
-comment sera le gagant sélictionné?
-la solution d'un hackathon sera évalué par qui?

****études sur des sysèmes existants
*** idée principale
*** functionalitées principales
*** acteurs principale
*** CU principale

*** technologies utilisées


le récruteur peut consulter le profil d'un développeur à condition que le
celui-la postule pour l'offre d'emploi de l'entreprise.

le résultat de mon etrentien est que la compétition est crée on suivant ses 
étapes:

-l'énoncé est crée par des spécialistes dans le domaine.
- la compétition est héberger sur un site comme hackerrank.
- les etudiants qui veulent rejoindre cette compétition remplissent un formulaire
avec leurs nom et emails.
-les etudiant soummettent leur solutions sur la plateforme.
-Si le problème est algorithmique: la solution sera passée sur des tests.
Si la compétition est de type hackathon la solution sera évalué par des jurys.

***********************************************************
1- The system is designed to manage hackathons and Algorithms challenges.

2- The registration process for a competition needs that a developer must be logged in and clicks on join competition. 

5- The ranking system uses the number of points gained, The developer with max points gets the first place, but in competitions it's for
the one who solves problems first, it analyses the time and score.



7-the system uses:Anonymization, Encryption in transit, Encription at REST, Security testing and Software Scanning.

8-yes.








***************************************************************
plant
plant
@"%SystemRoot%\System32\WindowsPowerShell\v1.0\powershell.exe" -NoProfile -ExecutionPolicy Bypass -Command "iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"



*****************************

Chapitre 1: analyses des besoins
1.1- Introduction
1.2. analyses des besoins.
1.2.1. Etudes des systèmes existants.
1.2.2. Description du projet.
1.2.3 Expression des besoins. Acteurs---> roles
1.2.3.1-Acteurs.
1.2.3.2- Contexte Statique.

1.2.3.3- BF;
1.2.3.4-BNF

1.2.4.Specification des besoins.
1.2.4.1-CU .Table.
	1.2.4.2.Globale
	.Actuer.

1.2.5. Specification of the use cases.
fiche descriptive.
DSS.

1.3.Conclusion


Fiche Descriptive:

Cas d'utilisation: S'authentifier
Acteur: Administrateur, Développeur, Instructeur, Analyste, Récruteur
Type: Principal
Pré-conditions: /
Objectifs: Utilisateur authentifié
S.N:

1- l'utilisateur clique sur s'authentifier.
2- Le système affiche un formulaire.
3- L'utilisateur remplit et soummit le formulaire.
4) le système vérifie le formulaire.
5) le système retourne la page d'accueil.


S.A: 

4.1. le système vérifie le formulaire, l'utilisateur a entré de fausses informations.
4.2. Le système affiche un formulaire.

5-1.1. Si role Administrateur. 
5.1.2. Afficher la page administrateur.

5.2.1. Si le role est Instructeur.
5.2.2. Le système affiche la page d'instructeur.

5.3.1. Si le role est Développeur.
5.3.2. Le système affiche la page Développeur.

5.4.1. Si le role est Analyste.
5.4.2. Le système affiche la page Analyste.

5.5.1. Si le role est Instructeur.
5.5.2. Le système affiche la page Instructeur.

S.E:
4.1- Si l'utilisateur remplit et soummit le formulaire plus de deux fois.
4.2- le système ferme la session.


Inscription => patriciper
challenge transforme cours gamifiee
